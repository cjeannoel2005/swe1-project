PRAGMA foreign_keys = ON;

-- USERS TABLE
CREATE TABLE IF NOT EXISTS Users (
    customerId INTEGER PRIMARY KEY AUTOINCREMENT,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    isAdmin BOOLEAN DEFAULT 0
);

-- SHOPPING CART TABLE
CREATE TABLE IF NOT EXISTS ShoppingCart (
    cartId INTEGER PRIMARY KEY AUTOINCREMENT,
    userId INTEGER NOT NULL,
    isEmpty BOOLEAN DEFAULT 1,
    FOREIGN KEY (userId) REFERENCES Users(customerId) ON DELETE CASCADE
);

-- SHOPPING CART ITEM TABLE
CREATE TABLE IF NOT EXISTS ShoppingCartItem (
    cartItemId INTEGER PRIMARY KEY AUTOINCREMENT,
    cartId INTEGER NOT NULL,
    bookId INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    FOREIGN KEY (cartId) REFERENCES ShoppingCart(cartId) ON DELETE CASCADE,
    FOREIGN KEY (bookId) REFERENCES Inventory(bookId)
);

-- INVENTORY TABLE
CREATE TABLE IF NOT EXISTS Inventory (
    bookId INTEGER PRIMARY KEY AUTOINCREMENT,
    title VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    quantity INTEGER NOT NULL,
    imageUrl TEXT  
);

-- ORDER TABLE
CREATE TABLE IF NOT EXISTS Orders (
    orderId INTEGER PRIMARY KEY AUTOINCREMENT,
    cartId INTEGER NOT NULL,
    userId INTEGER NOT NULL,
    shippingType VARCHAR(50) NOT NULL,
    shippingAddress VARCHAR(255) NOT NULL,
    serialNumber INTEGER UNIQUE NOT NULL,
    tax DECIMAL(10, 2) NOT NULL,
    subTotal DECIMAL(10, 2) NOT NULL,
    grandTotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (cartId) REFERENCES ShoppingCart(cartId),
    FOREIGN KEY (userId) REFERENCES Users(customerId)
